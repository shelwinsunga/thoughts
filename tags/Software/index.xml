<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software on</title><link>https://shelwinsunga.github.io/thoughts/tags/Software/</link><description>Recent content in Software on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 30 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://shelwinsunga.github.io/thoughts/tags/Software/index.xml" rel="self" type="application/rss+xml"/><item><title>B-Tree Analysis</title><link>https://shelwinsunga.github.io/thoughts/notes/data-structures/btreeinvariant/</link><pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate><guid>https://shelwinsunga.github.io/thoughts/notes/data-structures/btreeinvariant/</guid><description>Bushiness and Invariants Unlike in BSTs, where if you insert things in order the tree will be spindly, in B-Trees, if you insert things in order, the tree will be bushy no matter what.</description></item><item><title>Red Black Trees Intro</title><link>https://shelwinsunga.github.io/thoughts/notes/data-structures/red-black-tree/</link><pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate><guid>https://shelwinsunga.github.io/thoughts/notes/data-structures/red-black-tree/</guid><description>&amp;ldquo;Beautiful algorithms are, unfortunately, not always the most useful.&amp;rdquo; - Donald Knuth
B-Trees are painful to implement. And even if you do implement them, they&amp;rsquo;re still not that great.</description></item><item><title>B-Tree</title><link>https://shelwinsunga.github.io/thoughts/notes/data-structures/Btree/</link><pubDate>Wed, 28 Dec 2022 00:00:00 +0000</pubDate><guid>https://shelwinsunga.github.io/thoughts/notes/data-structures/Btree/</guid><description>B-Trees are a kind of self-balancing BST.
B-Trees To start, let&amp;rsquo;s make a rule to never add a new leaf. Instead, we&amp;rsquo;ll just add any new value to a node.</description></item><item><title>Abstract Data Types</title><link>https://shelwinsunga.github.io/thoughts/notes/data-structures/ADT/</link><pubDate>Tue, 27 Dec 2022 00:00:00 +0000</pubDate><guid>https://shelwinsunga.github.io/thoughts/notes/data-structures/ADT/</guid><description>Abstract Data types are defined by their operations, not their implementation.
The Stack ADT The Stack ADT supports the following operations:</description></item><item><title>BST Operations</title><link>https://shelwinsunga.github.io/thoughts/notes/data-structures/bstoperations/</link><pubDate>Tue, 27 Dec 2022 00:00:00 +0000</pubDate><guid>https://shelwinsunga.github.io/thoughts/notes/data-structures/bstoperations/</guid><description>Search If searchKey = T.key, return.
If searchKey &amp;lt; T.key, search T.left; If searchKey &amp;gt; T.key, search T.right; Runtime to complete search on a bushy BST in the worst case is $O(log(n))$.</description></item><item><title>BST Performance</title><link>https://shelwinsunga.github.io/thoughts/notes/data-structures/BStperformance/</link><pubDate>Tue, 27 Dec 2022 00:00:00 +0000</pubDate><guid>https://shelwinsunga.github.io/thoughts/notes/data-structures/BStperformance/</guid><description>Height and average depth are important properties of BSTs:
The depth of a node is how far it is from the root The height of a tree is the depth of its deepest leaf The average depth of a tree is the average depth of a tree&amp;rsquo;s nodes.</description></item><item><title>BST Tree Height</title><link>https://shelwinsunga.github.io/thoughts/notes/data-structures/BSTheight/</link><pubDate>Tue, 27 Dec 2022 00:00:00 +0000</pubDate><guid>https://shelwinsunga.github.io/thoughts/notes/data-structures/BSTheight/</guid><description>Height varies dramatically between &amp;ldquo;bushy&amp;rdquo; and &amp;ldquo;spindly&amp;rdquo; trees.
Bushy trees have a height of roughly $log(n)$. Spindly trees have a height of $n$.</description></item><item><title>Trees</title><link>https://shelwinsunga.github.io/thoughts/notes/data-structures/trees/</link><pubDate>Sun, 25 Dec 2022 00:00:00 +0000</pubDate><guid>https://shelwinsunga.github.io/thoughts/notes/data-structures/trees/</guid><description>A tree consists of
A set of nodes A set of edges that connect those nodes Constraint: There is exactly one path between any two nodes.</description></item><item><title>Introduction to Databases</title><link>https://shelwinsunga.github.io/thoughts/notes/ds/introdb/</link><pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate><guid>https://shelwinsunga.github.io/thoughts/notes/ds/introdb/</guid><description>In a very long sentence, Database Management Systems (DBMS) provides efficient, reliable, convenient, and safe multi-user storage of and access to massive amounts of persistent data.</description></item><item><title>A Brief Overview of Netflow</title><link>https://shelwinsunga.github.io/thoughts/thoughts/netflow/</link><pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate><guid>https://shelwinsunga.github.io/thoughts/thoughts/netflow/</guid><description>One of the challenges of managing a network is understanding what&amp;rsquo;s actually going through that network. We have a lot of different protocols buzzing around - HTTPS, SMTP, SFTP, DNS, etc - so how do we answer questions like how much of each protocol is happening?</description></item></channel></rss>